// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "ourgym/models"

	mock "github.com/stretchr/testify/mock"
)

// OtpRepository is an autogenerated mock type for the OtpRepository type
type OtpRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: otp
func (_m *OtpRepository) Create(otp models.Otp) models.Otp {
	ret := _m.Called(otp)

	var r0 models.Otp
	if rf, ok := ret.Get(0).(func(models.Otp) models.Otp); ok {
		r0 = rf(otp)
	} else {
		r0 = ret.Get(0).(models.Otp)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *OtpRepository) Delete(id uint) bool {
	ret := _m.Called(id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(uint) bool); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetOneByFilter provides a mock function with given fields: key, value
func (_m *OtpRepository) GetOneByFilter(key string, value interface{}) models.Otp {
	ret := _m.Called(key, value)

	var r0 models.Otp
	if rf, ok := ret.Get(0).(func(string, interface{}) models.Otp); ok {
		r0 = rf(key, value)
	} else {
		r0 = ret.Get(0).(models.Otp)
	}

	return r0
}

type mockConstructorTestingTNewOtpRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewOtpRepository creates a new instance of OtpRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOtpRepository(t mockConstructorTestingTNewOtpRepository) *OtpRepository {
	mock := &OtpRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
