// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "ourgym/models"

	mock "github.com/stretchr/testify/mock"
)

// PaymentMethodRepository is an autogenerated mock type for the PaymentMethodRepository type
type PaymentMethodRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *PaymentMethodRepository) GetAll() []models.PaymentMethod {
	ret := _m.Called()

	var r0 []models.PaymentMethod
	if rf, ok := ret.Get(0).(func() []models.PaymentMethod); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.PaymentMethod)
		}
	}

	return r0
}

// GetByID provides a mock function with given fields: id
func (_m *PaymentMethodRepository) GetByID(id string) models.PaymentMethod {
	ret := _m.Called(id)

	var r0 models.PaymentMethod
	if rf, ok := ret.Get(0).(func(string) models.PaymentMethod); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.PaymentMethod)
	}

	return r0
}

type mockConstructorTestingTNewPaymentMethodRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewPaymentMethodRepository creates a new instance of PaymentMethodRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPaymentMethodRepository(t mockConstructorTestingTNewPaymentMethodRepository) *PaymentMethodRepository {
	mock := &PaymentMethodRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
